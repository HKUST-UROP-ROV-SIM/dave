# To use:
#
#     pre-commit run -a
#
# Or:
#
#     pre-commit install  # (runs every time you commit in git)
#
# To update this file:
#
#     pre-commit autoupdate
#
# See https://github.com/pre-commit/pre-commit
---
# CANNOT USE (AMENT_LINT excutables are being called from local)
# ci:
#   autofix_commit_msg: |
#     [pre-commit.ci] auto fixes from pre-commit.com hooks

#     for more information, see https://pre-commit.ci
#   autofix_prs: true
#   autoupdate_branch: 'ros2'
#   autoupdate_commit_msg: "[pre-commit.ci] pre-commit autoupdate"
#   autoupdate_schedule: weekly
#   skip: []
#   submodules: false

repos:
  # Standard hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: check-added-large-files
      - id: check-ast
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-merge-conflict
      - id: check-symlinks
      - id: debug-statements
      - id: end-of-file-fixer
      - id: mixed-line-ending
      - id: trailing-whitespace
        exclude_types: [rst]
      - id: fix-byte-order-marker

  # Python hooks
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.16.0
    hooks:
      - id: pyupgrade
        args: [--py36-plus]

  # PyDocStyle
  - repo: https://github.com/PyCQA/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args:
          ["--ignore=D100,D101,D102,D103,D104,D105,D106,D107,D203,D212,D404"]

  - repo: https://github.com/psf/black
    rev: 24.4.2
    hooks:
      - id: black
        args: ["--line-length=99", "--exclude=tools/code_check"]

  - repo: https://github.com/pycqa/flake8
    rev: 7.1.0
    hooks:
      - id: flake8
        args: ["--extend-ignore=E501", "--exclude=tools/code_check"]

  # CPP hooks
  - repo: https://github.com/pre-commit/mirrors-clang-format
    rev: v18.1.7
    hooks:
      - id: clang-format
        args: ["-fallback-style=none", "-i"]

  - repo: local
    hooks:
      - id: ament_cppcheck
        name: ament_cppcheck
        description: Static code analysis of C/C++ files.
        entry: env AMENT_CPPCHECK_ALLOW_SLOW_VERSIONS=1 ament_cppcheck
        language: system
        files: \.(h\+\+|h|hh|hxx|hpp|cuh|c|cc|cpp|cu|c\+\+|cxx|tpp|txx)$

  - repo: local
    hooks:
      - id: ament_cpplint
        name: ament_cpplint
        description: Static code analysis of C/C++ files.
        entry: ament_cpplint
        language: system
        files: \.(h\+\+|h|hh|hxx|hpp|cuh|c|cc|cpp|cu|c\+\+|cxx|tpp|txx)$
        args: ["--linelength=100", "--filter=-whitespace/newline"]

  # Cmake hooks (can be installed with pip3 install ament-lint-cmake-py)
  - repo: local
    hooks:
      - id: ament_lint_cmake
        name: ament_lint_cmake
        description: Check format of CMakeLists.txt files.
        entry: ament_lint_cmake
        additional_dependencies: [ament-lint-cmake-py]
        language: system
        files: CMakeLists\.txt$
        language: python
        types: [python]

  # Copyright (exclude for now, doesn't exist for nobel
  # https://packages.ubuntu.com/search?keywords=ament+copyright&searchon=names)
  # - repo: local
  #   hooks:
  #     - id: ament_copyright
  #       name: ament_copyright
  #       description: Check if copyright notice is available in all files.
  #       entry: ament_copyright
  #       language: system
  #       exclude: .*/conf\.py$

  # Docs - RestructuredText hooks
  - repo: https://github.com/PyCQA/doc8
    rev: v1.1.1
    hooks:
      - id: doc8
        args: ["--max-line-length=100", "--ignore=D001"]
        exclude: CHANGELOG\.rst$

  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
      - id: rst-backticks
        exclude: CHANGELOG\.rst$
      - id: rst-directive-colons
      - id: rst-inline-touching-normal

  # Spellcheck in comments and docs
  # skipping of *.svg files is not working...
  - repo: https://github.com/codespell-project/codespell
    rev: v2.3.0
    hooks:
      - id: codespell
        args: ["--write-changes", "--uri-ignore-words-list=ist", "-L manuel"]
        exclude: CHANGELOG\.rst|\.(svg|pyc|drawio)$

  # Json lint
  - repo: https://github.com/python-jsonschema/check-jsonschema
    rev: 0.28.6
    hooks:
      - id: check-github-workflows
        args: ["--verbose"]
      - id: check-github-actions
        args: ["--verbose"]
      - id: check-dependabot
        args: ["--verbose"]

  # XML lint for xacro, urdf, and sdf files
  - repo: https://github.com/lsst-ts/pre-commit-xmllint
    rev: v1.0.0
    hooks:
      - id: format-xmllint
        name: xml-lint-robot-files
        description: Lint XML syntax in xacro, urdf, and sdf files.
        entry: check-xmllint
        # language: system
        types: [text]
        files: \.(xacro|urdf|sdf|xml|launch)$

  - repo: https://github.com/turo/pre-commit-hooks
    rev: v4.0.0  # You may version pin this if desired
    hooks:
      - id: docker-lint
        files: \.dockerfile
      - id: docker-compose-lint
